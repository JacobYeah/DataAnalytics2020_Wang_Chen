wine <- read.csv(file.choose())
wine
hist(wine)
hist(wine$fixed.acidity.volatile.acidity.citric.acid.residual.sugar.chlorides.free.sulfur.dioxide.total.sulfur.dioxide.density.pH.sulphates.alcohol.quality)
hist(wine$fixed)
wine
wine.head()
head(wine)
head(wine)
wine <- read.csv(file.choose())
head(wine)
hist(wine)
hist(wine$fixed.acidity)
hist(wine$as.numeric(fixed.acidity))
wine$fixed.acidity
wine <- read.csv(file.choose())
head(wine)
wine$fixed.acidity
wine <- read.csv(file.choose())
head(wine)
wine$fixed.acidity
hist(wine$fixed.acidity)
require(ggplot2)
p<-ggplot(data = wine, mapping = aes(x=value, y = count))
p+geom_histogram()
hist(wine$fixed.acidity)
p<-ggplot(data = wine)
p+geom_histogram()
p<-ggplot(data = wine, aes(x = wine.value))
p+geom_histogram()
p<-ggplot(data = wine, aes(x = wine$fixed.acidity))
p+geom_histogram()
wine.col.names
wine.col.names()
colnames(wine)
p<-ggplot(data = wine, aes(x = colnames(wine)))
p+geom_histogram()
colnames(wine)$value
colnames(wine)
p+geom_histogram()+facet_wrap(~ colnames(wine))
p<-ggplot(data = wine, mapping = aes(x=value,grouping(colnames(wine))))
p+geom_histogram()+facet_wrap(colnames(wine))
p<-ggplot(data = wine, mapping = aes(grouping(colnames(wine))))
p+geom_histogram()+facet_wrap(colnames(wine))
p<-ggplot(data = wine, mapping = aes(grouping(coln(wine))))
col(wine)
head(wine)
p<-ggplot(data = wine, mapping = aes(grouping(col(wine))))
p+geom_histogram()+facet_wrap(ï½žcol(wine))
p+geom_histogram()+facet_wrap(~col(wine))
p+geom_histogram()+
p+geom_histogram()
p<-ggplot(data = wine, mapping = aes(x=col(wine))
p<-ggplot(data = wine, mapping = aes(x=col(wine)))
p<-ggplot(data = wine, mapping = aes(x=col(wine)))
p+geom_histogram()
redwine <-read.csv(file.choose( "/Desktop/DA/HW7/winequality-red.csv"),header = T)
redwine <-read.csv(file.choose( "/Desktop/DA/HW7/winequality-red.csv"),header = T)
redwine$poor <- redwine$quality <= 4
redwine$okay <- redwine$quality == 5 |redwine$quality == 6
redwine$good <- redwine$quality >= 7
summary(redwine)
redwine
library(readr) # CSV file I/O, e.g. the read_csv function
library(read) # CSV file I/O, e.g. the read_csv function
library(lattice) #required for nearest neighbors
install.packages("FNN")
library(FNN) # nearest neighbors techniques
install.packages("pROC")
View(redwine)
dim(redwine)
redwine <- as.data.frame(redwine)
library(ggplot2)
library(tidyr)
install.packages(readr)
ggplot(gather(redwine, cols, value), aes(x = value)) +
geom_bar() + facet_grid(.~cols)
install.packages("readr")
install.packages("tidyr")
ggplot(gather(redwine, cols, value), aes(x = value)) +
geom_bar() + facet_grid(.~cols)
library(tidyr)
ggplot(gather(redwine, cols, value), aes(x = value)) +
geom_bar() + facet_grid(.~cols)
ggplot(gather(redwine), aes(value)) +
geom_bar() +
facet_wrap(~key, scales = 'free_x')
library(tidyr)
ggplot(gather(wine, cols, value), aes(x = value)) +
geom_bar() + facet_grid(.~cols)
ggplot(gather(wine), aes(value)) +
geom_bar() +
facet_wrap(~key, scales = 'free_x')
summary(wine$quality)
table(wine$quality)
bank <- read.csv(file.choose())
bank <- read.csv(file.choose(),sep = ";")
head(bank)
linear_quality = lm(quality ~ fixed.acidity+volatile.acidity+citric.acid+residual.sugar
+chlorides+free.sulfur.dioxide+total.sulfur.dioxide+density+pH+sulphates+
alcohol, data=wine)
summary(linear_quality)
linear_quality_1 = lm(quality ~ alcohol, data =wine)
summary(linear_quality_1)
linear_quality_4 = lm(quality ~ alcohol + volatile.acidity + citric.acid + sulphates, data = wine)
summary(linear_quality_4)
plot(wine$alcohol,wine$quality)
points(wine$alcohol,predict(linear_quality_4,redwine),col="blue")
points(wine$alcohol,predict(linear_quality_1,redwine),col="red")
knn10 = knn.reg(train=wine[,1:11], test=wine[,1:11], y=wine$quality, k =10)
knn20 = knn.reg(train=wine[,1:11],test=wine[,1:11], y = wine$quality, k=20)
plot(wine$alcohol,wine$quality)
points(wine$alcohol,knn10$pred,col="red")
points(wine$alcohol,knn20$pred,col="blue")
library(rpart)
tree <- rpart(good ~ alcohol + sulphates, data = redwine, method="class")
summary(tree)
library(rpart.plot)
install.packages("rpart")
install.packages("rpart")
install.packages("rpart")
library(rpart.plot)
install.packages("rpart.plot")
install.packages("rpart.plot")
install.packages("rpart.plot")
library(rpart.plot)
library(rpart.plot)
install.packages("caret")
library(caret)
rpart.plot(tree)
library(rpart.plot)
install.packages("rpart")
library(rpart.plot)
